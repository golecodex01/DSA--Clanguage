/******************************************************************************

                            Online C Compiler.
                Code, Compile, Run and Debug C program online.
Write your code in this editor and press "Run" button to compile and execute it.

*******************************************************************************/
//Stack lifo
#include <stdio.h>
#define size 10
int stack[size];
int currentposition=-1;


int  isFull(){
    
    if(currentposition==size-1){
        return 1;
    }
    else{
        return 0;
    }
    
    
}

int isEmpty(){
    if(currentposition<size){
        return 1;
    }
    else{
        return 0;
    }
}


void stackPush(int value){
    if(isEmpty()==1){
        currentposition++;
        stack[currentposition]=value;
        
    }
    else{
        printf("\n Stack is FUll\n");
    }
}

int stackPop(){
      if(currentposition>=0){
          int poppedElement=stack[currentposition];
          currentposition--;
          return poppedElement;
      }
      else{
          printf("Stake is Empty");
      }
}

void linearSearching(int value){
    if(isEmpty()==1){
        printf("\nStack is empty so searching not Possible \n");
    }
    else{
        int f=0;
        for(int i=0;i<=currentposition;i++){
            if(stack[i]==value){
                f=1;
            }
        }
        if(f==1){
            printf("\nElement is Found \n ");
        }
        else{
            printf("\nNot Found \n ");
        }
        
        
        
    }
}



void displayMenu(){
    printf("Press 1 for Push\n ");
    printf("Press 2 for POP \n");
    printf("Press 3 for searching\n ");
    printf("Press 4 for check Stack is Full\n");
    printf("Press 5 to view all \n");
    printf("Press 6 For Exit\n");
  
}

void viewStack(){
    printf("\nYour Stack : \n ");
    for(int i=currentposition;i>=0;i--){
        printf("%d \n ",stack[i]);
    }
}


int main()
{
    int element;
    int choice;
    int ch;
    do
    {
        displayMenu();
        printf("\nEnter your Choice :\n ");
        scanf("%d",&choice);
        
        switch(choice){
            case 1:
            printf("Enter element to push \n");
            scanf("%d",&element);
            stackPush(element);
            viewStack();
            break;
            
            case 2:
           
            int poppedElement=stackPop();
            stackPop();
            printf("Poped element is %d \n  ",poppedElement);
            break;
                
            
            
            case 3 :
            printf("Enter element to search : \n");
            scanf("%d",&element);
            linearSearching(element);
            break;
            
            case 4 :
            if(isFull()==1){
                printf("Stack is Full \n ");
                break;
            }
            else{
                printf("Stack is Not Full\n ");
                break;
            }
            
            case 5:
            viewStack();
            break;
            
            default:
            printf("\n Please Enter valid choice \n");
            
        }
        printf("Do you want to continue \n press 1 for continue\n press 0 for Exit \n ");
        scanf("%d",&ch);
        
    }
    while(ch!=0);
    return 0;
    
    
    
  
}
