/****************************************************************************
 Stack All Operation Done By Mohit Gole 
 
*******************************************************************************/

#include <stdio.h>
#define size 10
int stack[size];
int currentposition = -1;


int isFull() {
    if (currentposition == size - 1) {
        return 1;
    } else {
        return 0;
    }
}


int isEmpty() {
    if (currentposition == -1) {  
        return 1;
    } 
    else {
        return 0;
    }
}


void stackPush(int value) {
    if (isFull() == 0) { 
        currentposition++;
        stack[currentposition] = value;
    } else {
        printf("\nStack is Full\n");
    }
}


int stackPop() {
    if (currentposition >= 0) {
        int poppedElement = stack[currentposition];
        currentposition--;
        return poppedElement;
    } else {
        printf("Stack is Empty\n");
        return -1;  
    }
}

void linearSearching(int value) {
    if (isEmpty() == 1) {
        printf("\nStack is empty so searching not possible\n");
    } else {
        int f = 0;
        for (int i = 0; i <= currentposition; i++) {
            if (stack[i] == value) {
                f = 1;
            }
        }
        if (f == 1) {
            printf("\nElement is Found\n");
        } else {
            printf("\nNot Found\n");
        }
    }
}

void displayMenu() {
    printf("Press 1 for Push\n");
    printf("Press 2 for POP\n");
    printf("Press 3 for Searching\n");
    printf("Press 4 to Check Stack is Full\n");
    printf("Press 5 to View All\n");
    printf("Press 6 for Exit\n");
}

void viewStack() {
    if (isEmpty()) {
        printf("\nStack is Empty\n");
        return;
    }

    printf("\nYour Stack:\n");
    for (int i = currentposition; i >= 0; i--) {
        printf("%d\n", stack[i]);
    }
}

int main() {
    int element;
    int choice;
    int ch;
    do {
        displayMenu();
        printf("\nEnter your choice:\n");
        scanf("%d", &choice);

        switch (choice) {
            case 1:
                printf("Enter element to push:\n");
                scanf("%d", &element);
                stackPush(element);
                viewStack();
                break;

            case 2:
                element = stackPop(); 
                if (element != -1) {
                    printf("Popped element is %d\n", element);
                }
                break;

            case 3:
                printf("Enter element to search:\n");
                scanf("%d", &element);
                linearSearching(element);
                break;

            case 4:
                if (isFull() == 1) {
                    printf("Stack is Full\n");
                } else {
                    printf("Stack is Not Full\n");
                }
                break;

            case 5:
                viewStack();
                break;

            case 6:
                printf("Exit Program\n");
                return 0;

            default:
                printf("\nPlease Enter valid choice\n");
        }

        printf("Do you want to continue\nPress 1 for continue\nPress 0 for Exit\n");
        scanf("%d", &ch);

    } while (ch != 0);

    return 0;
}
